{"version":3,"sources":["components/NavBar/NavBar.jsx","services/tokenService.js","services/userService.js","pages/LoginPage/LoginPage.jsx","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","services/astros-api.js","pages/AddAstroPage/AddAstroPage.jsx","components/AstroCard/AstroCard.jsx","pages/AstroListPage/AstroListPage.jsx","pages/EditAstroPage/EditAstroPage.jsx","services/observations-api.js","pages/AddObservationPage/AddObservationPage.jsx","components/WeatherForm/WeatherForm.jsx","services/utils.js","services/weather-api.js","components/WeatherCard/WeatherCard.jsx","pages/SearchWeatherPage/SearchWeatherPage.jsx","pages/App/App.js","serviceWorker.js","index.js"],"names":["NavBar","user","handleLogout","nav","className","id","href","name","onClick","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","getUserFromToken","removeToken","signup","fetch","BASE_URL","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","getUser","logout","login","creds","LoginPage","state","email","pw","handleChange","e","setState","target","value","handleSubmit","a","preventDefault","userService","props","handleSignupOrLogin","history","push","alert","autocomplete","onSubmit","this","type","onChange","htmlFor","class","to","Component","SignupForm","password","passwordConf","updateMessage","message","disabled","isFormInvalid","SignupPage","msg","create","astro","mode","deleteOne","update","_id","AddAstroPage","invalidForm","formData","image","location","proximity","notes","seen","formRef","React","createRef","handleAddAstro","current","checkValidity","ref","required","AstroCard","handleDeleteAstro","alt","src","pathname","AstroListPage","astros","map","key","EditAstroPage","handleUpdateAstro","observation","AddObservationPage","date","handleAddObservation","WeatherForm","country","handleGetWeatherData","city","getTimeFromTimestamp","t","dt","hr","getHours","m","getMinutes","s","getSeconds","substr","getWeatherDataFromBackEnd","console","log","WeatherCard","weatherData","sys","weather","main","temp","feels_like","humidity","pressure","toFixed","visibility","wind","speed","gust","clouds","all","sunrise","sunset","SearchWeatherPage","base","windDirection","App","observations","newAstroData","astroAPI","newAstro","newObservationData","observationAPI","newObservation","filter","updatedAstroData","updatedAstro","newAstrosArray","exact","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.df3a7b8c.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavBar = ({ user, handleLogout }) => {\n    let nav = user ?\n    <>\n        <nav>\n            <div className=\"nav-wrapper\">\n                <ul id=\"nav-mobile\" className=\"left\">\n                    <li><a href=\"/\" className=\"nav-link\"><h5 className=\"flow-text\">AstroTrek</h5></a></li>\n                    <li><a href=\"/observations/add\" className=\"nav-link\"><i className=\"material-icons left\">add_box</i>Observation</a></li>\n                    <li><a href=\"/astro/add\" className=\"nav-link\"><i className=\"material-icons left\">add_box</i>Object</a></li>\n                    <li><a href=\"/astros\" className=\"nav-link\"><i className=\"material-icons left\">brightness_2</i>My Objects</a></li>\n                    <li><a href=\"/observations\" className=\"nav-link\"><i className=\"material-icons left\">remove_red_eye</i>My Obsevations</a></li>\n                    <li><a href=\"/weather\" className=\"nav-link\"><i className=\"material-icons left\">cloud</i>View Weather</a></li>\n                </ul>\n                <ul id=\"nav-mobile\" className=\"right\">\n                    <li><a href=\" \" className=\"nav-link\">Welcome, {user.name}</a></li>\n                    <li><a href=\" \" className=\"nav-link\" onClick={handleLogout}>Log Out</a></li>\n                </ul>\n            </div>\n        </nav>\n    </>\n    :\n    <>\n        <nav>\n            <div className=\"nav-wrapper\">\n                <ul id=\"nav-mobile\" className=\"left\">\n                <li><a href=\"/\" className=\"nav-link\">AstroTrek</a></li>\n                <li><a href=\"/\" className=\"nav-link\">About</a></li>\n                <li><a href=\"/\" className=\"nav-link\">Visits</a></li>\n                <li><a href=\"/\" className=\"nav-link\">Constellations</a></li>\n                </ul>\n                <ul id=\"nav-mobile\" className=\"right\">\n                    <li><a href=\"/login\" className=\"nav-link\">Log In</a></li>\n                    <li><a href=\"/signup\" className=\"nav-link\">Sign Up</a></li>\n                </ul>\n            </div>\n        </nav>\n    </>\n\n    return (\n    <>\n        {nav}\n    </>\n    )\n}\n\nexport default NavBar;","function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    } \n  }\n  \nfunction getUserFromToken () {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction removeToken() {\n    localStorage.removeItem('token');\n}\n\nexport default {\n    setToken,\n    getToken,\n    getUserFromToken,\n    removeToken,\n  };","import tokenService from '../services/tokenService';\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({ token }) => {\n    tokenService.setToken(token);\n  });\n  // the above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './LoginPage.css';\nimport userService from '../../services/userService';\n\nclass LoginPage extends Component {\n  \n  state = {\n    email: '',\n    pw: ''\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.login(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin();\n      this.props.history.push('/');\n    } catch (err) {\n      // Use a modal or toast in your apps instead of alert\n      alert('Invalid Credentials!');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"LoginPage\">\n        <h3>Log In</h3>\n        <form className=\"col s12\" autocomplete=\"off\" onSubmit={this.handleSubmit} >\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autocomplete=\"off\" id=\"email\" className=\"active\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n              <label htmlFor=\"email\">Email</label>\n\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autocomplete=\"off\" className=\"active\" id=\"password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n              <label htmlFor=\"password\">Password</label>\n\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s12\">\n              <button className=\"btn deep-purple accent-3\">Log In<i class=\"material-icons right\">arrow_forward</i></button>&nbsp;&nbsp;&nbsp;\n              <Link className=\"btn blue\" to='/'>Cancel<i class=\"material-icons right\">cancel</i></Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService from '../../services/userService';\n\nclass SignupForm extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    passwordConf: ''\n  };\n\n  handleChange = (e) => {\n    this.props.updateMessage('');\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.signup(this.state);\n      this.props.handleSignupOrLogin();\n      this.props.history.push('/');\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      this.props.updateMessage(err.message);\n    }\n  }\n\n  isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Sign Up</h3>\n        <form className=\"col s12\" autocomplete=\"off\" onSubmit={this.handleSubmit} >\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autocomplete=\"off\" className=\"active\" id=\"name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n              <label htmlFor=\"name\">Name</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autocomplete=\"off\" className=\"active\" id=\"email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n              <label htmlFor=\"email\">Email</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autocomplete=\"off\" className=\"active\" id=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n              <label htmlFor=\"password\">Password</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autocomplete=\"off\" className=\"active\" id=\"confirm\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n              <label htmlFor=\"confirm\">Confirm Password</label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn green\" disabled={this.isFormInvalid()}>Sign Up<i class=\"material-icons right\">person_add</i></button>&nbsp;&nbsp;\n              <Link className=\"btn red\" to='/'>Cancel<i class=\"material-icons right\">cancel</i></Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\nimport './SignupPage.css';\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {message: ''}\n  }\n\n  updateMessage = (msg) => {\n    this.setState({message: msg});\n  }\n\n  render() {\n    return (\n      <div className='SignupPage'>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default SignupPage;","import tokenService from \"./tokenService\";\nconst BASE_URL = '/api/astros/';\n\nexport function getAll() {\n    return fetch(BASE_URL, {\n        headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\n    }, {mode: \"cors\"})\n    .then(res => res.json())\n}\n\nexport function create(astro) {\n    return fetch(BASE_URL, {\n      method: 'POST',\n      headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n      body: JSON.stringify(astro)\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}\n\nexport function deleteOne(id) {\n    return fetch(`${BASE_URL}${id}`, {\n        method: \"DELETE\",\n        headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}\n\nexport function update(astro) {\n    return fetch (`${BASE_URL}${astro._id}`, {\n        method: \"PUT\",\n        headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n        body: JSON.stringify(astro)\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}","import React, { Component } from 'react';\nimport './AddAstroPage.css';\n\nclass AddAstroPage extends Component {\n    state = {\n        invalidForm: true,\n        formData: {\n            name: '',\n            image: '',\n            type: '',\n            location: '',\n            proximity: '',\n            notes: '',\n            seen: ''\n        }\n    };\n\n    formRef = React.createRef();\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.handleAddAstro(this.state.formData);\n    };\n\n    handleChange = e => {\n        const formData = {...this.state.formData, [e.target.name]: e.target.value};\n        this.setState({\n        formData,\n        invalidForm: !this.formRef.current.checkValidity()\n        });\n    };\n\n    render () {\n        return (\n            <>\n            <main>\n            <div className=\"AddAstroPage\">\n                <h4>Add Astronomical Object</h4>\n                <form ref={this.formRef} onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field inline col s6\">\n                            <input\n                                name=\"name\"\n                                id=\"astro_name\"\n                                type=\"text\"\n                                className=\"active\"\n                                value={this.state.formData.name}\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <label htmlFor=\"astro_name\">Object Name</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field inline col s6\">\n                            <input\n                                name=\"image\"\n                                id=\"astro_image\"\n                                type=\"text\"\n                                className=\"active\"\n                                value={this.state.formData.image}\n                                onChange={this.handleChange}\n                                />\n                            <label htmlFor=\"astro_image\">Image URL</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input\n                                name=\"type\"\n                                id=\"astro_type\"\n                                type=\"text\"\n                                className=\"active\"\n                                value={this.state.formData.type}\n                                onChange={this.handleChange}\n                            />\n                            <label htmlFor=\"astro_type\">Type of Object</label>\n                        </div>\n                    </div>\n\n                    <div>\n                        <label>Type of Object</label>\n                            <input\n                                className=\"with-gap\"\n                                name=\"type\"\n                                value=\"constellation\"\n                                type=\"radio\"\n                                onChange={this.handleChange}\n                            />\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input\n                                name=\"location\"\n                                id=\"astro_location\"\n                                type=\"text\"\n                                className=\"active\"\n                                value={this.state.formData.location}\n                                onChange={this.handleChange}\n                            />\n                            <label htmlFor=\"astro_location\">Location</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input\n                                name=\"proximity\"\n                                id=\"astro_proximity\"\n                                type=\"text\"\n                                className=\"active focus\"\n                                value={this.state.formData.proximity}\n                                onChange={this.handleChange}\n                            />\n                            <label htmlFor=\"astro_proximity\">Proximity to Earth</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input\n                                name=\"notes\"\n                                id=\"astro_notes\"\n                                type=\"text\"\n                                className=\"active\"\n                                value={this.state.formData.notes}\n                                onChange={this.handleChange}\n                            />\n                            <label htmlFor=\"astro_notes\">Notes</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <label>Seen?</label>\n                            <input\n                                name=\"seen\"\n                                id=\"astro_seen\"\n                                type=\"text\"\n                                className=\"active\"\n                                value={this.state.formData.seen}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className=\"btn purple\"\n                        disabled={this.state.invalidForm}\n                    ><i className=\"material-icons left\">add</i>Add Object\n                    </button>  \n                </form>\n            </div>\n            </main>\n            </>\n        );\n    }\n}\n\nexport default AddAstroPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction AstroCard({ astro, handleDeleteAstro }) {\n    return(\n        <>\n            <div className=\"card black\">\n                <div className=\"card-image waves-effect waves-block waves-light\">\n                    <img alt=\"astro\" className=\"activator\" src={astro.image ? astro.image : \"https://images.unsplash.com/photo-1548124771-9f2040b66df8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"} onClick={()=> {}}/>\n                </div>\n                <div className=\"card-content\">\n                    <span className=\"card-title activator text-darken-4\">{astro.name}<i className=\"material-icons right\">more_vert</i></span>\n                    <p>{astro.notes}</p>\n                </div>\n                <div className=\"card-reveal black\">\n                    <span className=\"card-title\">{astro.name}<i className=\"material-icons right\">close</i></span>\n                    <h6>Name: {astro.name}</h6>\n                    <p>Type:  {astro.type}</p>\n                    <div>Location:  {astro.location}</div>\n                    <div>Proximity:  {astro.proximity}</div>\n                    <p>Notes: {astro.notes}</p>\n                    <button type=\"submit\" className=\"btn purple\" onClick={() => handleDeleteAstro(astro._id)}>\n                    <i className=\"material-icons left\">delete</i>    \n                        Delete Object\n                    </button>\n                    <Link\n                        className=\"btn purple white-text\"\n                        to={{\n                            pathname: '/edit',\n                            state: {astro}\n                        }}\n                    ><i className=\"material-icons left\">edit</i>\n                        Edit Object\n                    </Link>\n                </div>\n            </div>\n        </>\n    ) \n}\nexport default AstroCard;","import React from 'react';\nimport './AstroListPage.css';\nimport AstroCard from '../../components/AstroCard/AstroCard';\n\nfunction AstroListPage(props) {\n    return (\n        <>\n        <main>\n        <h4>Astro List</h4>\n        <div className=\"AstroListPage-grid\">\n            <div className=\"col s 6\">\n            {props.astros.map(astro =>\n                <AstroCard \n                    key={astro._id}\n                    astro={astro}\n                    user={props.user}\n                    handleDeleteAstro={props.handleDeleteAstro}\n                />    \n            )}\n            </div>\n        </div>\n        </main>\n        </>\n    );\n}\n\nexport default AstroListPage;","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n\nclass EditAstroPage extends Component {\n    state = {\n        invalidForm: false,\n        formData: this.props.location.state.astro\n    }\n\n    formRef = React.createRef();\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.handleUpdateAstro(this.state.formData);\n    };\n\n    handleChange = e => {\n        const formData = {...this.state.formData, [e.target.name]: e.target.value};\n        this.setState({\n        formData,\n        invalidForm: !this.formRef.current.checkValidity()\n        });\n    };\n\n    render() {\n        return (\n            <>\n            <main>\n                <form ref={this.formRef} onSubmit={this.handleSubmit}>\n                <div className=\"row\">\n                    <div className=\"input-field col s6\">\n                     <input\n                        name=\"name\"\n                        id=\"astro_name\"\n                        type=\"text\"\n                        className=\"active\"\n                        value={this.state.formData.name}\n                        onChange={this.handleChange}\n                        />\n                        <label htmlFor=\"astro_name\">Object Name</label>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field col s6\">\n                     <input\n                        name=\"image\"\n                        id=\"astro_image\"\n                        type=\"text\"\n                        className=\"active\"\n                        value={this.state.formData.image}\n                        onChange={this.handleChange}\n                    />\n                    <label htmlFor=\"astro_image\">Image URL</label>\n                     </div>\n                 </div>\n                 <div className=\"row\">\n                     <div className=\"input-field col s6\">\n                     <input\n                     name=\"type\"\n                     id=\"astro_type\"\n                     type=\"text\"\n                     className=\"active\"\n                     value={this.state.formData.type}\n                     onChange={this.handleChange}\n                     />\n                     <label htmlFor=\"astro_type\">Type</label>\n                     </div>\n                 </div>\n                 <div className=\"row\">\n                     <div className=\"input-field col s6\">\n                     <input\n                     name=\"location\"\n                     id=\"astro_location\"\n                     type=\"text\"\n                     className=\"active\"\n                     value={this.state.formData.location}\n                     onChange={this.handleChange}\n                     />\n                     <label htmlFor=\"astro_location\">Location</label>\n                     </div>\n                 </div>\n                 <div className=\"row\">\n                     <div className=\"input-field col s6\">\n                     <input\n                     name=\"proximity\"\n                     id=\"astro_proximity\"\n                     type=\"text\"\n                     className=\"active\"\n                     value={this.state.formData.proximity}\n                     onChange={this.handleChange}\n                     />\n                     <label htmlFor=\"astro_proximity\">Proximity to Earth</label>\n                     </div>\n                 </div>\n                 <div className=\"row\">\n                     <div className=\"input-field col s6\">\n                     <input\n                     name=\"notes\"\n                     id=\"astro_notes\"\n                     type=\"text\"\n                     className=\"active\"\n                     value={this.state.formData.notes}\n                     onChange={this.handleChange}\n                     />\n                     <label htmlFor=\"astro_notes\">Notes</label>\n                     </div>\n                 </div>\n                 <div className=\"row\">\n                     <div className=\"input-field col s6\">\n                     <input\n                     name=\"seen\"\n                     id=\"astro_seen\"\n                     type=\"text\"\n                     className=\"active\"\n                     value={this.state.formData.seen}\n                     onChange={this.handleChange}\n                     />\n                     <label htmlFor=\"astro_seen\">Seen?</label>\n                     </div>\n                 </div>\n            <button\n                type=\"submit\"\n                className=\"btn purple\"\n                disabled={this.state.invalidForm}\n            >\n            <i className=\"material-icons left\">edit</i>\n            Update Object\n            </button>  \n            </form>\n            </main>   \n            </>\n        )   \n}\n}\n\nexport default EditAstroPage;","import tokenService from \"./tokenService\";\nconst BASE_URL = '/api/observations/';\n\nexport function getAll() {\n    return fetch(BASE_URL, {\n        headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\n    }, {mode: \"cors\"})\n    .then(res => res.json())\n}\n\nexport function create(observation) {\n    return fetch(BASE_URL, {\n      method: 'POST',\n      headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n      body: JSON.stringify(observation)\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}\n\nexport function deleteOne(id) {\n    return fetch(`${BASE_URL}${id}`, {\n        method: \"DELETE\",\n        headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}\n\nexport function update(observation) {\n    return fetch (`${BASE_URL}${observation._id}`, {\n        method: \"PUT\",\n        headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n        body: JSON.stringify(observation)\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}","import React, { Component } from 'react';\n\nclass AddObservationPage extends Component {\n    state = {\n        invalidForm: true,\n        formData: {\n            date: '',\n            image: '',\n            type: '',\n            location: '',\n            proximity: '',\n            notes: '',\n            seen: ''\n        }\n    }\n\n    formRef = React.createRef();\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.handleAddObservation(this.state.formData);\n    };\n\n    handleChange = e => {\n        const formData = {...this.state.formData, [e.target.name]: e.target.value};\n        this.setState({\n        formData,\n        invalidForm: !this.formRef.current.checkValidity()\n        });\n    };\n\n    render () {\n        return (\n            <>\n                <main>\n                <h4>Add Observation</h4>\n                <form ref={this.formRef} onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field inline col s6\">\n                            <input\n                                name=\"date\"\n                                id=\"observation_date\"\n                                type=\"date\"\n                                className=\"datepicker\"\n                                value={this.state.formData.date}\n                                onChange={this.handleChange}\n                                required\n                            />\n                            <label htmlFor=\"observation_date\">Date</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field inline col s6\">\n                            <input\n                                name=\"location\"\n                                id=\"observation_location\"\n                                type=\"text\"\n                                className=\"active\"\n                                value={this.state.formData.location}\n                                onChange={this.handleChange}\n                                />\n                            <label htmlFor=\"observation_location\">Location</label>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input\n                                name=\"notes\"\n                                id=\"observation_notes\"\n                                type=\"text\"\n                                className=\"active\"\n                                value={this.state.formData.notes}\n                                onChange={this.handleChange}\n                            />\n                            <label htmlFor=\"observation_notes\">Notes</label>\n                        </div>\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className=\"btn purple\"\n                        disabled={this.state.invalidForm}\n                    ><i className=\"material-icons left\">add</i>Add Observation\n                    </button>  \n                </form>\n            </main>\n            </>\n        )\n    }\n}\n\nexport default AddObservationPage;","import React, { Component } from 'react';\n\nclass WeatherForm extends Component {\n    state = {\n        invalidForm: true,\n        formData: {\n            name: '',\n            country: ''\n        }\n\n    };\n\n    formRef = React.createRef();\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.handleGetWeatherData(this.state.formData);\n      };\n\n    handleChange = e => {\n        const formData = {...this.state.formData, [e.target.name]: e.target.value};\n        this.setState({\n            formData,\n            invalidForm: !this.formRef.current.checkValidity()\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <form className=\"col s12\" ref={this.formRef} onSubmit={this.handleSubmit} >\n                    <div className=\"row\">\n                        <div className=\"input-field col s3\">\n                            <input name=\"city\" id=\"city\" type=\"text\" className=\"active\" value={this.state.formData.city} onChange={this.handleChange} required />\n                            <label htmlFor=\"city\">City</label>\n                        </div>\n                        <div className=\"input-field col s3\">\n                            <input name=\"country\" id=\"country\" type=\"text\" className=\"active\" value={this.state.formData.country} onChange={this.handleChange} required />\n                            <label htmlFor=\"country\">Country</label>\n                        </div>\n                        <button\n                            type=\"submit\"\n                            className=\"btn purple\"\n                            disabled={this.state.invalidForm}\n                        ><i className=\"material-icons left\">search</i>\n                            Get Weather\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default WeatherForm;","export function getTimeFromTimestamp(t){\n    var dt = new Date(t*1000);\n    var hr = dt.getHours();\n    var m = \"0\" + dt.getMinutes();\n    var s = \"0\" + dt.getSeconds();\n    return hr+ ':' + m.substr(-2) + ':' + s.substr(-2);  \n}\n\n","export function getWeatherDataFromBackEnd(formData){\n    console.log(formData);\n    return fetch('/weather', {\n        method: \"POST\",\n        headers: {'content-type': 'application/json'},\n        body: JSON.stringify(formData)\n    }, {mode: \"cors\"})\n    .then(res => res.json())\n}","import React from 'react';\n\nconst WeatherCard = (props) => {\n    return (\n        <>\n            {props.weatherData.name ? \n                <>\n                    {props.weatherData.message ? \n                    <h4>{props.weatherData.message}</h4>\n                    :\n                    <>\n                        <div class=\"col s12 m7\">\n                            <h4 class=\"header\">Current Weather for {props.weatherData.name}, {props.weatherData.sys.country}</h4>\n                            <div class=\"card horizontal\">\n                                <div class=\"card-stacked\">\n                                    <div class=\"card-content\">\n                                        <p>Conditions:  {props.weatherData.weather[0].main} </p>\n                                        <p>Temperature:  {props.weatherData.main.temp} &deg;F </p>\n                                        <p>Feels Like:  {props.weatherData.main.feels_like} &deg;F </p>\n                                        <p>Humidity:  {props.weatherData.main.humidity}% </p>\n                                        <p>Pressure:  {(props.weatherData.main.pressure / 33.864).toFixed(2)} inHg </p>\n                                        <p>Visibility:  {(props.weatherData.visibility / 1609).toFixed(1)} miles</p>\n                                        <p>Wind:  {(props.weatherData.wind.speed).toFixed(1)} mph</p>\n                                        <p>Wind Gusts:  {props.weatherData.wind.gust ? `${(props.weatherData.wind.gust)} mph` : '0 mph'}</p>\n                                        <p>Cloud Cover:  {props.weatherData.clouds.all} %</p>\n                                        <p>Sunrise:  {props.sunrise} AM</p>\n                                        <p>Sunset:  {props.sunset} PM</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                    }\n                </>\n                :\n                <>\n                </>\n            }\n        </>\n    )\n}\n\nexport default WeatherCard;","import React, { Component } from 'react';\nimport WeatherForm from '../../components/WeatherForm/WeatherForm';\nimport { getTimeFromTimestamp } from '../../services/utils';\nimport { getWeatherDataFromBackEnd } from '../../services/weather-api';\nimport WeatherCard from '../../components/WeatherCard/WeatherCard';\n\nclass SearchWeatherPage extends Component {\n  state = {\n    weatherData: [],\n    sunrise: '',\n    sunset: ''\n  }\n\n  handleGetWeatherData = async formData => {\n    const weatherData = await getWeatherDataFromBackEnd(formData);\n    const sunrise = await getTimeFromTimestamp(weatherData.sys.sunrise);\n    const sunset = await getTimeFromTimestamp(weatherData.sys.sunset);\n    this.props.history.push('/weather');\n    this.setState({weatherData, sunrise, sunset});\n  }\n\n  render(){\n    return(\n        <>\n          <WeatherForm \n              handleGetWeatherData={this.handleGetWeatherData}\n          />\n          {this.state.weatherData.base ?\n          <>\n              <WeatherCard \n                  weatherData={this.state.weatherData}\n                  windDirection={this.state.windDirection}\n                  sunrise={this.state.sunrise}\n                  sunset={this.state.sunset}\n              />\n              \n          </>    \n              :\n              <>\n              </>\n          }\n        </>\n    )\n}\n}\nexport default SearchWeatherPage;","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom'\nimport './App.css';\nimport NavBar from '../../components/NavBar/NavBar';\nimport LoginPage from '../LoginPage/LoginPage';\nimport SignupPage from '../SignupPage/SignupPage';\nimport userService from '../../services/userService';\nimport * as astroAPI from '../../services/astros-api';\nimport AddAstroPage from '../AddAstroPage/AddAstroPage';\nimport AstroListPage from '../AstroListPage/AstroListPage';\nimport EditAstroPage from '../EditAstroPage/EditAstroPage';\nimport * as observationAPI from '../../services/observations-api';\nimport AddObservationPage from '../AddObservationPage/AddObservationPage';\nimport SearchWeatherPage from '../SearchWeatherPage/SearchWeatherPage';\n\nclass App extends Component {\n  state = {\n    astros: [],\n    observations: [],\n    user: userService.getUser()\n  }\n\n  handleAddAstro = async newAstroData => {\n    const newAstro = await astroAPI.create(newAstroData);\n    this.setState(state => ({\n      astros: [...state.astros, newAstro]\n    }), () => this.props.history.push('/astros'));\n  }\n\n  handleAddObservation = async newObservationData => {\n    const newObservation = await observationAPI.create(newObservationData);\n    this.setState(state => ({\n      observations: [...state.observations, newObservation]\n    }), () => this.props.history.push('/observations'));\n  }\n\n  handleDeleteAstro = async id => {\n    await astroAPI.deleteOne(id);\n    this.setState(state => ({\n      astros: state.astros.filter(a => a._id !== id)\n    }), () => this.props.history.push('/astros'));\n  }\n\n  handleUpdateAstro = async updatedAstroData => {\n    const updatedAstro = await astroAPI.update(updatedAstroData);\n    const newAstrosArray = this.state.astros.map(a => \n      a._id === updatedAstro._id ? updatedAstro : a);\n      this.setState(\n        {astros: newAstrosArray},\n        () => this.props.history.push('/astros')\n      )\n  }\n\n  async componentDidMount() {\n    const astros = await astroAPI.getAll();\n    this.setState({astros})\n  }\n\n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({user: userService.getUser()});\n  }\n\n  render () {\n    return (\n      <>\n        <NavBar \n          user={this.state.user}\n          handleLogout={this.handleLogout}\n        />\n        <Route exact path='/signup' render={({ history }) => \n          <SignupPage\n            history={history}\n            handleSignupOrLogin={this.handleSignupOrLogin}\n          />\n        }/>\n        <Route exact path='/login' render={({ history }) => \n          <LoginPage\n            history={history}\n            handleSignupOrLogin={this.handleSignupOrLogin}\n          />\n        }/>\n        <Route exact path='/astro/add' render={({ history }) =>\n        userService.getUser() ?\n          <AddAstroPage\n            handleAddAstro = {this.handleAddAstro}\n          />  \n          :\n          <Redirect to='/login' />\n        }/>\n        <Route exact path='/observations/add' render={({ history }) =>\n        userService.getUser() ?\n          <AddObservationPage\n            handleAddObservation = {this.handleAddObservation}\n        /> \n          :\n          <Redirect to='/login' />  \n        }/>\n        <Route exact path='/astros' render={({ history }) =>\n          <AstroListPage\n            astros={this.state.astros}\n            handleDeleteAstro={this.handleDeleteAstro}\n          />  \n        }/>\n        <Route exact path='/edit' render={({ location }) =>\n          <EditAstroPage\n            handleUpdateAstro={this.handleUpdateAstro}\n            location={location}\n          />\n        }/>\n        <Route exact path='/weather' render={({ history }) =>\n          <SearchWeatherPage\n            history={history}\n            user={this.state.user}\n          />\n        }/>\n\n      </>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <Route render={({history}) => <App history={history} />} />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}